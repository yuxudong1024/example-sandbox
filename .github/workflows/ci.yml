# This is a basic workflow to help you get started with MATLAB Actions

name: MATLAB Build

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
      # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
env:
  MLM_LICENSE_TOKEN: ${{ secrets.MLM_LICENSE_TOKEN }}
   
permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on:  [self-hosted, linux, x64]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
      
      # Sets up MATLAB on the GitHub Actions runner
      #- name: Setup MATLAB
      #  uses: matlab-actions/setup-matlab@v1

      # Setup MATLAB R2024b for Linux selfhosted runner
      - name: Prepend MATLAB to PATH on Linux
        if: runner.os == 'Linux'
        run: echo "/usr/local/MATLAB/R2024a/bin" >> $GITHUB_PATH
      
      - name: Start display server (required for building doc in MATLAB)
        run: |
          Xvfb :99 & 
          echo "DISPLAY=:99" >> $GITHUB_ENV

      # Runs a set of commands using the runners shell
      - name: Run all tests
        uses: matlab-actions/run-tests@v2
        with:
          source-folder: code
          test-results-junit: test-results/results.xml
          code-coverage-cobertura: code-coverage/coverage.xml

      # You can use "run-command" to execute custom MATLAB scripts, functions, or statements.
      #- name: Run custom testing procedure
      #  uses: matlab-actions/run-command@v1
      #  with:
      #    command: matlab-batch "disp('Running my custom testing procedure!'); addpath('code'); results = runtests('IncludeSubfolders', true); assertSuccess(results);" 
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action/linux@v2
        if: always()
        with:
            files: "test-results/*.xml"

      # Copy by using scp to Raspberry Pi 5 Winston Yu hosted at winston.mathworks-workshop.com
      # - name: copy file via ssh password
      #   uses: appleboy/scp-action@v0.1.7
      #   with:
      #     host: ${{ secrets.HOST }}
      #     username: ${{ secrets.USERNAME }}
      #     password: ${{ secrets.PASSWORD }}
      #     port: ${{ secrets.PORT }}
      #     source: "test-results/results.xml,code-coverage/coverage.xml"
      #     target: /home/wyu/Upload
            
      # Copy by using scp to Raspberry Pi 5 Winston Yu hosted at winston.mathworks-workshop.com
      - name: copy file via ssh password
        uses: appleboy/scp-action@v0.1.7
        with:
          host: "winston.mathworks-workshop.com"
          username: wyu
          password: Matlab101
          port: 22
          source: "test-results/results.xml,code-coverage/coverage.xml"
          target: /mnt/nfs/resultcloud